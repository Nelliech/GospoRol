// <auto-generated />
using System;
using GospoRol.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GospoRol.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GospoRol.Domain.Models.AgriculturalClass", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Class")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameClass")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AgriculturalClasses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Class = "I",
                            NameClass = "Gleby orne najlepsze"
                        },
                        new
                        {
                            Id = 2,
                            Class = "II",
                            NameClass = "Gleby orne bardzo dobre"
                        },
                        new
                        {
                            Id = 3,
                            Class = "III a",
                            NameClass = "Gleby orne dobre"
                        },
                        new
                        {
                            Id = 4,
                            Class = "III b",
                            NameClass = "Gleby orne średnio dobre"
                        },
                        new
                        {
                            Id = 5,
                            Class = "IV a",
                            NameClass = "Gleby orne średniej jakości, lepsze"
                        },
                        new
                        {
                            Id = 6,
                            Class = "IV a",
                            NameClass = "Gleby orne średniej jakości, gorsze"
                        },
                        new
                        {
                            Id = 7,
                            Class = "V",
                            NameClass = "Gleby orne słabe"
                        },
                        new
                        {
                            Id = 8,
                            Class = "VI",
                            NameClass = "Gleby orne najsłabsze"
                        });
                });

            modelBuilder.Entity("GospoRol.Domain.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Field", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreage")
                        .HasColumnType("float");

                    b.Property<int>("AgriculturalClassId")
                        .HasColumnType("int");

                    b.Property<string>("CultivatedPlant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("DistanceToWarehouse")
                        .HasColumnType("float");

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LandId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Variety")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AgriculturalClassId");

                    b.HasIndex("LandId");

                    b.HasIndex("UserId");

                    b.ToTable("Fields");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Land", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreage")
                        .HasColumnType("float");

                    b.Property<double>("AcreageFree")
                        .HasColumnType("float");

                    b.Property<double>("AcreageOccupied")
                        .HasColumnType("float");

                    b.Property<string>("PlotNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Lands");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Products.Fertilizer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Concentration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FertilizerComposition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Producer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TypeFertilizerId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TypeFertilizerId");

                    b.HasIndex("UserId");

                    b.ToTable("Fertilizers");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Products.Pesticide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Capacity")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PesticideComposition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Producer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("TypePesticideId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TypePesticideId");

                    b.HasIndex("UserId");

                    b.ToTable("Pesticides");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Products.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("TypeProductId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("WarehouseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TypeProductId");

                    b.HasIndex("UserId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Products.Seed", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NamePlant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantVariety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SeedingRate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Seeds");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Products.TypeFertilizer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeFertilizers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nawóz Zielony"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nawóz Organiczny"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nawóz Mineralny"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Azot"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Fosfor"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Potas"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Mikroelementy"
                        });
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Products.TypePesticide", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypePesticides");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Algicyd"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Bakteriocyd"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Fungicyd"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Herbicyd"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Regulator wzrostu roślin"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Regulator wzrostu owadów"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Zoocyd"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Synergetyk"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Wirocyd"
                        });
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Products.TypeProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeProduct");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nawozy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nasiona"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Pestycydy"
                        });
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.Cultivation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("CultivatedPlant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTreatment")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlantVariety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TreatmentId")
                        .HasColumnType("int");

                    b.Property<int>("TypeCultivationId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TreatmentId");

                    b.HasIndex("TypeCultivationId");

                    b.HasIndex("UserId");

                    b.ToTable("Cultivatings");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.Fertilization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("CultivatedPlant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTreatment")
                        .HasColumnType("datetime2");

                    b.Property<int>("FertilizerId")
                        .HasColumnType("int");

                    b.Property<double>("HowManyHa")
                        .HasColumnType("float");

                    b.Property<string>("PlantVariety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TreatmentId")
                        .HasColumnType("int");

                    b.Property<int>("TypeFertilizationId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FertilizerId");

                    b.HasIndex("TreatmentId");

                    b.HasIndex("TypeFertilizationId");

                    b.HasIndex("UserId");

                    b.ToTable("Fertilizations");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.Harvest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("CultivatedPlant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTreatment")
                        .HasColumnType("datetime2");

                    b.Property<double>("Efficiency")
                        .HasColumnType("float");

                    b.Property<bool>("IsPostHarvestResidue")
                        .HasColumnType("bit");

                    b.Property<string>("PlantVariety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TreatmentId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TreatmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Harvests");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.MechanicalWeedControl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("CultivatedPlant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTreatment")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberInterRows")
                        .HasColumnType("int");

                    b.Property<string>("PlantVariety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TreatmentId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("TreatmentId");

                    b.HasIndex("UserId");

                    b.ToTable("MechanicalWeedControls");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.Sowing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("CultivatedPlant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTreatment")
                        .HasColumnType("datetime2");

                    b.Property<double>("DepthSowing")
                        .HasColumnType("float");

                    b.Property<double>("HowManyHa")
                        .HasColumnType("float");

                    b.Property<int>("NumberRows")
                        .HasColumnType("int");

                    b.Property<string>("PlantVariety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SeedId")
                        .HasColumnType("int");

                    b.Property<int>("TreatmentId")
                        .HasColumnType("int");

                    b.Property<int>("TypeSowingId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("WidthBetweenRows")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SeedId");

                    b.HasIndex("TreatmentId");

                    b.HasIndex("TypeSowingId");

                    b.HasIndex("UserId");

                    b.ToTable("Sowings");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.Spraying", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("CultivatedPlant")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTreatment")
                        .HasColumnType("datetime2");

                    b.Property<double>("Dose")
                        .HasColumnType("float");

                    b.Property<string>("NameProduct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PesticideId")
                        .HasColumnType("int");

                    b.Property<string>("PlantVariety")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TreatmentId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PesticideId");

                    b.HasIndex("TreatmentId");

                    b.HasIndex("UserId");

                    b.ToTable("Sprayings");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.Treatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FieldId")
                        .HasColumnType("int");

                    b.Property<int>("TypeTreatmentId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FieldId");

                    b.HasIndex("TypeTreatmentId");

                    b.ToTable("Treatments");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.TypeCultivation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeCultivations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Włókowanie"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Orka"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Bronowanie"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Kultywatorowanie"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Wałowanie"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Gryzowanie"
                        });
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.TypeFertilization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeFertilizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nawożenie Przedsiewne"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Nawożenie Siewne"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nawożenie Pogłówne"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Nawożenie Dolistne"
                        });
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.TypeSowing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeSowings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Siew Gwiazdowy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Siew Punktowy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Siew Pasowy"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Siew Rzędowy"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Siew Rzutowy"
                        });
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.TypeTreatment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypeTreatment");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Siew"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Zbiór"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Nawożenie"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Oprysk"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Odchwaszczanie"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Zabieg Uprawowy"
                        });
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Warehouse", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Acreage")
                        .HasColumnType("float");

                    b.Property<double>("AcreageFree")
                        .HasColumnType("float");

                    b.Property<double>("AcreageOccupied")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Field", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.AgriculturalClass", "AgriculturalClass")
                        .WithMany("Fields")
                        .HasForeignKey("AgriculturalClassId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.Land", "Land")
                        .WithMany("Fields")
                        .HasForeignKey("LandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Land", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Products.Fertilizer", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.Products.Product", null)
                        .WithMany("Fertilizers")
                        .HasForeignKey("ProductId");

                    b.HasOne("GospoRol.Domain.Models.Products.TypeFertilizer", "TypeFertilizer")
                        .WithMany("Fertilizers")
                        .HasForeignKey("TypeFertilizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Products.Pesticide", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.Products.Product", null)
                        .WithMany("Pesticides")
                        .HasForeignKey("ProductId");

                    b.HasOne("GospoRol.Domain.Models.Products.TypePesticide", "TypePesticide")
                        .WithMany("Pesticides")
                        .HasForeignKey("TypePesticideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Products.Product", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.Products.TypeProduct", "TypeProduct")
                        .WithMany("Products")
                        .HasForeignKey("TypeProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.HasOne("GospoRol.Domain.Models.Warehouse", "Warehouse")
                        .WithMany("Products")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Products.Seed", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.Products.Product", null)
                        .WithMany("Seeds")
                        .HasForeignKey("ProductId");

                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.Cultivation", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.Treatments.Treatment", "Treatment")
                        .WithMany("Cultivatings")
                        .HasForeignKey("TreatmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.Treatments.TypeCultivation", "TypeCultivation")
                        .WithMany("Cultivations")
                        .HasForeignKey("TypeCultivationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.Fertilization", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.Products.Fertilizer", "Fertilizer")
                        .WithMany("Fertilizations")
                        .HasForeignKey("FertilizerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.Treatments.Treatment", "Treatment")
                        .WithMany("Fertilizations")
                        .HasForeignKey("TreatmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.Treatments.TypeFertilization", "TypeFertilization")
                        .WithMany("Fertilizations")
                        .HasForeignKey("TypeFertilizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.Harvest", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.Treatments.Treatment", "Treatment")
                        .WithMany("Harvests")
                        .HasForeignKey("TreatmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.MechanicalWeedControl", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.Treatments.Treatment", "Treatment")
                        .WithMany("MechanicalWeedControls")
                        .HasForeignKey("TreatmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.Sowing", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.Products.Seed", "Seed")
                        .WithMany("Sowings")
                        .HasForeignKey("SeedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.Treatments.Treatment", "Treatment")
                        .WithMany("Sowings")
                        .HasForeignKey("TreatmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.Treatments.TypeSowing", "TypeSowing")
                        .WithMany("Sowings")
                        .HasForeignKey("TypeSowingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.Spraying", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.Products.Pesticide", "Pesticide")
                        .WithMany("Sprayings")
                        .HasForeignKey("PesticideId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.Treatments.Treatment", "Treatment")
                        .WithMany("Sprayings")
                        .HasForeignKey("TreatmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Treatments.Treatment", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.Field", "Field")
                        .WithMany("Treatments")
                        .HasForeignKey("FieldId");

                    b.HasOne("GospoRol.Domain.Models.Treatments.TypeTreatment", "TypeTreatment")
                        .WithMany("Treatments")
                        .HasForeignKey("TypeTreatmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GospoRol.Domain.Models.Warehouse", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GospoRol.Domain.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
